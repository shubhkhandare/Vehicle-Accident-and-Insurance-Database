--- TO CHECK INSURANCE STATUS 'ACTIVE' OR 'EXPIRED'
CREATE OR REPLACE FUNCTION CHECK_EXPIRY(VEHICLE_IP IN NUMBER)
RETURN VARCHAR2
IS
STATUS VARCHAR2(30);
END_DATE DATE;
BEGIN
   SELECT VI.END_DATE INTO END_DATE
   FROM VEHICLE V JOIN VINSURANCE VI
   ON V.VEHICLE_ID = VI.VEHICLE_ID
   WHERE V.VEHICLE_ID = VEHICLE_IP;
   
   IF END_DATE >SYSDATE
    THEN 
        STATUS := 'Expired';
        
   ELSE 
        STATUS := 'Active';
       
   END IF; 

RETURN STATUS;
END CHECK_EXPIRY;



---PROCEDUR-
SET SERVEROUTPUT ON 
CREATE OR REPLACE PROCEDURE VEHICLE_INSURANCE_EXPIRY (VEHICLE_IP IN NUMBER)
IS 
CHECK_EXP NUMBER;
BEGIN

CHECK_EXP := CHECK_EXPIRY(VEHICLE_IP);
DBMS_OUTPUT.PUT_LINE('VEHICLE_INSURANCE_STATUS :'||CHECK_EXP);

EXCEPTION
WHEN NO_DATA_FOUND
THEN 
DBMS_OUTPUT.PUT_LINE('INTER VALID VEHICLE ID ');

END VEHICLE_INSURANCE_EXPIRY;

EXECUTE VEHICLE_INSURANCE_EXPIRY(&VEHICLE_IP);



----Procedure to Get Accident Details by Owner ID

SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE ACCIDENT_DETAILS(IN_OWNER_ID IN NUMBER)
IS 

CURSOR ACC_DETAILS
IS
SELECT A.ACCIDENT_ID, A.DATE1, V.VEHICLE_ID, 
V.VEHICLE_TYPE, VI.END_DATE, O.NAME

FROM OWNERS O JOIN VEHICLE V
ON O.OWNER_ID = V.OWNER_ID
JOIN VINSURANCE VI
ON V.VEHICLE_ID = VI.VEHICLE_ID
JOIN ACCIDENTS A
ON V.VEHICLE_ID = A.VEHICLE_ID
WHERE O.OWNER_ID = IN_OWNER_ID;

BEGIN
FOR I IN ACC_DETAILS
LOOP
   DBMS_OUTPUT.PUT_LINE('ACCIDENT_ID    :'||I.ACCIDENT_ID );
   DBMS_OUTPUT.PUT_LINE('ACCIDENT DATE  :'||I.DATE1 );
   DBMS_OUTPUT.PUT_LINE('VEHICLE ID     :'||I.VEHICLE_ID );
   DBMS_OUTPUT.PUT_LINE('VEHICLE TYPE   :'||I.VEHICLE_TYPE );
   DBMS_OUTPUT.PUT_LINE('VEHICLE INSURANCE END DATE    :'||I.END_DATE );
   DBMS_OUTPUT.PUT_LINE('OWNER NAME    :'||I.NAME );
END LOOP;
END ACCIDENT_DETAILS;
   

EXECUTE ACCIDENT_DETAILS(&IN_OWNER_ID);


----Procedure to Get Vehicle Insurance Details for an Owner
----------------------

SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE INSURANCE_DETAILS(IN_OWNER_ID IN NUMBER)
IS

CURSOR IN_DETAILS
IS
SELECT VI.VI_ID, V.VEHICLE_ID, V.VEHICLE_TYPE,
VI.START_DATE, VI.END_DATE 
FROM OWNERS O JOIN VEHICLE V
ON O.OWNER_ID = V.OWNER_ID
JOIN VINSURANCE VI
ON V.VEHICLE_ID = VI.VEHICLE_ID
WHERE O.OWNER_ID = IN_OWNER_ID ;
BEGIN
FOR I IN IN_DETAILS
LOOP
  DBMS_OUTPUT.PUT_LINE('INSURANCE_ID  :'||I.VI_ID);
  DBMS_OUTPUT.PUT_LINE('VEHICLE_ID  :'||I.VEHICLE_ID);
  DBMS_OUTPUT.PUT_LINE('VEHICLE_TYPE  :'||I.VEHICLE_TYPE);
  DBMS_OUTPUT.PUT_LINE('INSURANCE SATRT_DATE  :'||I.START_DATE);
  DBMS_OUTPUT.PUT_LINE('INSURANCE END_DATE  :'||I.END_DATE);
  
END LOOP;
END INSURANCE_DETAILS;


EXECUTE INSURANCE_DETAILS(&IN_OWNER_ID);

------------------------
----Procedure to Get Accident History for a Given Vehicle

SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE VEHICLE_HISTORY(IN_VEHICLE_ID IN NUMBER)
IS

CURSOR VEH_HISTORY
IS
SELECT A.ACCIDENT_ID, A.DATE1, L.CITY
FROM VEHICLE V JOIN ACCIDENTS A
ON V.VEHICLE_ID = A.VEHICLE_ID
JOIN LOCATIONS1 L
ON A.LOCATION_ID = L.LOCATION_ID
WHERE V.VEHICLE_ID = IN_VEHICLE_ID;

BEGIN
FOR I IN VEH_HISTORY
LOOP
    DBMS_OUTPUT.PUT_LINE('ACCIDENT_ID         : '||I.ACCIDENT_ID);
    DBMS_OUTPUT.PUT_LINE('DATE OF ACCIDENT    : '||I.DATE1);
    DBMS_OUTPUT.PUT_LINE('CITY OF ACCIDENT    : '||I.CITY);
END LOOP;
END VEHICLE_HISTORY;


EXECUTE VEHICLE_HISTORY(&IN_VEHICLE_ID);


----ACCIDENT COUNT ON GIVEN VEHICLE_ID-------------------------

----CREATED FUNCTION TO CALCULATE COUNT OF ACCIDENT--------
SET SERVEROUTPUT ON
CREATE OR REPLACE FUNCTION ACCIDENT_COUNT(VEHICLE_IP IN NUMBER)
RETURN NUMBER
IS

CNT NUMBER;
BEGIN
SELECT COUNT(ACCIDENT_ID) 
INTO  CNT
FROM ACCIDENTS A
WHERE A.VEHICLE_ID = VEHICLE_IP;


RETURN CNT;

END ACCIDENT_COUNT;


----PROCEDURE- FOR COUN OF ACCIDENT--
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE VEHICLE_ACCIDENT_DETAILS(VEHICLE_IP IN NUMBER)
IS 
COUNT_ACCIDENT NUMBER;
BEGIN

COUNT_ACCIDENT := ACCIDENT_COUNT(VEHICLE_IP);
DBMS_OUTPUT.PUT_LINE('TOTAL COUNT OF ACCIDENT :'||COUNT_ACCIDENT);

END VEHICLE_ACCIDENT_DETAILS;

EXECUTE VEHICLE_ACCIDENT_DETAILS(&VEHICLE_IP);


------------------------------------------

