----Procedure to Get Accident Details by Owner ID
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE ACCIDENT_DETAILS(IN_OWNER_ID IN NUMBER)
IS 

CURSOR ACC_DETAILS
IS
SELECT A.ACCIDENT_ID, A.DATE1, V.VEHICLE_ID, 
V.VEHICLE_TYPE, VI.END_DATE, O.NAME

FROM OWNERS O JOIN VEHICLE V
ON O.OWNER_ID = V.OWNER_ID
JOIN VINSURANCE VI
ON V.VEHICLE_ID = VI.VEHICLE_ID
JOIN ACCIDENTS A
ON V.VEHICLE_ID = A.VEHICLE_ID
WHERE O.OWNER_ID = IN_OWNER_ID;

BEGIN
FOR I IN ACC_DETAILS
LOOP
   DBMS_OUTPUT.PUT_LINE('ACCIDENT_ID    :'||I.ACCIDENT_ID );
   DBMS_OUTPUT.PUT_LINE('ACCIDENT DATE  :'||I.DATE1 );
   DBMS_OUTPUT.PUT_LINE('VEHICLE ID     :'||I.VEHICLE_ID );
   DBMS_OUTPUT.PUT_LINE('VEHICLE TYPE   :'||I.VEHICLE_TYPE );
   DBMS_OUTPUT.PUT_LINE('VEHICLE INSURANCE END DATE    :'||I.END_DATE );
   DBMS_OUTPUT.PUT_LINE('OWNER NAME    :'||I.NAME );
END LOOP;
END ACCIDENT_DETAILS;
   

EXECUTE ACCIDENT_DETAILS(&IN_OWNER_ID);


----Procedure to Get Vehicle Insurance Details for an Owner
----------------------

SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE INSURANCE_DETAILS(IN_OWNER_ID IN NUMBER)
IS

CURSOR IN_DETAILS
IS
SELECT VI.VI_ID, V.VEHICLE_ID, V.VEHICLE_TYPE,
VI.START_DATE, VI.END_DATE 
FROM OWNERS O JOIN VEHICLE V
ON O.OWNER_ID = V.OWNER_ID
JOIN VINSURANCE VI
ON V.VEHICLE_ID = VI.VEHICLE_ID
WHERE O.OWNER_ID = IN_OWNER_ID ;
BEGIN
FOR I IN IN_DETAILS
LOOP
  DBMS_OUTPUT.PUT_LINE('INSURANCE_ID  :'||I.VI_ID);
  DBMS_OUTPUT.PUT_LINE('VEHICLE_ID  :'||I.VEHICLE_ID);
  DBMS_OUTPUT.PUT_LINE('VEHICLE_TYPE  :'||I.VEHICLE_TYPE);
  DBMS_OUTPUT.PUT_LINE('INSURANCE SATRT_DATE  :'||I.START_DATE);
  DBMS_OUTPUT.PUT_LINE('INSURANCE END_DATE  :'||I.END_DATE);
  
END LOOP;
END INSURANCE_DETAILS;


EXECUTE INSURANCE_DETAILS(&IN_OWNER_ID);

------------------------
----Procedure to Get Accident History for a Given Vehicle
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE VEHICLE_HISTORY(IN_VEHICLE_ID IN NUMBER)
IS

CURSOR VEH_HISTORY
IS
SELECT A.ACCIDENT_ID, A.DATE1, L.CITY
FROM VEHICLE V JOIN ACCIDENTS A
ON V.VEHICLE_ID = A.VEHICLE_ID
JOIN LOCATIONS1 L
ON A.LOCATION_ID = L.LOCATION_ID
WHERE V.VEHICLE_ID = IN_VEHICLE_ID;

BEGIN
FOR I IN VEH_HISTORY
LOOP
    DBMS_OUTPUT.PUT_LINE('ACCIDENT_ID         : '||I.ACCIDENT_ID);
    DBMS_OUTPUT.PUT_LINE('DATE OF ACCIDENT    : '||I.DATE1);
    DBMS_OUTPUT.PUT_LINE('CITY OF ACCIDENT    : '||I.CITY);
END LOOP;
END VEHICLE_HISTORY;


EXECUTE VEHICLE_HISTORY(&IN_VEHICLE_ID);


----ACCIDENT COUNT I=ON GIVEN VEHICLE_ID-------------------------
----CREATED FUNCTION TO CALCULATE COUNT OF ACCIDENT--------
SET SERVEROUTPUT ON
CREATE OR REPLACE FUNCTION ACCIDENT_COUNT(VEHICLE_IP IN NUMBER)
RETURN NUMBER
IS

CNT NUMBER;
BEGIN
SELECT COUNT(ACCIDENT_ID) 
INTO  CNT
FROM ACCIDENTS A
WHERE A.VEHICLE_ID = VEHICLE_IP;


RETURN CNT;

END ACCIDENT_COUNT;


----PROCEDURE- FOR COUN OF ACCIDENT--
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE VEHICLE_ACCIDENT_DETAILS(VEHICLE_IP IN NUMBER)
IS 
COUNT_ACCIDENT NUMBER;
BEGIN

COUNT_ACCIDENT := ACCIDENT_COUNT(VEHICLE_IP);
DBMS_OUTPUT.PUT_LINE('TOTAL COUNT OF ACCIDENT :'||COUNT_ACCIDENT);

END VEHICLE_ACCIDENT_DETAILS;

EXECUTE VEHICLE_ACCIDENT_DETAILS(&VEHICLE_IP);


---------------------------------------------------------
--OWNERS WHOSE VEHICLE INSURANCE GOING TO EXPIRE IN GIVEN YEAR
---------------------------------
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE VI_END_DATE(END_YEAR VARCHAR2)
IS

CURSOR O_DETAILS IS
SELECT O.OWNER_ID, O.NAME, V.VEHICLE_ID, V.VEHICLE_TYPE, VI.END_DATE
FROM OWNERS O JOIN VEHICLE V
ON O.OWNER_ID = V.OWNER_ID
JOIN VINSURANCE VI
ON V.VEHICLE_ID = VI.VEHICLE_ID
JOIN OWNER_INSURANCE OI
ON O.OWNER_ID = OI.OWNER_ID
WHERE TO_CHAR(VI.END_DATE,'YYYY') = END_YEAR;

CNT NUMBER := 0;
BEGIN

FOR I IN O_DETAILS 
LOOP 
  CNT := CNT+1;
  DBMS_OUTPUT.PUT_LINE('OWNER ID       : '||I.OWNER_ID);
  DBMS_OUTPUT.PUT_LINE('OWNER NAME       : '||I.NAME);
  DBMS_OUTPUT.PUT_LINE('VEHICLE ID       : '||I.VEHICLE_ID);
  DBMS_OUTPUT.PUT_LINE('VEHICLE TYPE       : '||I.VEHICLE_TYPE);
  DBMS_OUTPUT.PUT_LINE('VEHICLE INSURANCE END DATE       : '||I.END_DATE);
  DBMS_OUTPUT.PUT_LINE('                                                ');
  
  
  
END LOOP;


EXCEPTION 
WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE ('Unexpected error');

END;    

EXECUTE VI_END_DATE(&END_YEAR);


----------
--OWNERS WHOSE VEHICLE INSURANCE GOING TO EXPIRE IN GIVEN YEAR
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE VI_END_DATE(END_YEAR VARCHAR2)
IS
O_ID NUMBER;
NAME VARCHAR2(40);
VID NUMBER; 
VTYPE VARCHAR2(50);
EDATE DATE;

BEGIN

SELECT O.OWNER_ID, O.NAME, V.VEHICLE_ID, V.VEHICLE_TYPE, VI.END_DATE INTO O_ID, NAME, VID, VTYPE, EDATE
FROM OWNERS O JOIN VEHICLE V
ON O.OWNER_ID = V.OWNER_ID
JOIN VINSURANCE VI
ON V.VEHICLE_ID = VI.VEHICLE_ID
JOIN OWNER_INSURANCE OI
ON O.OWNER_ID = OI.OWNER_ID
WHERE TO_CHAR(VI.END_DATE,'YYYY') = END_YEAR;

  DBMS_OUTPUT.PUT_LINE('OWNER ID       : '||O_ID);
  DBMS_OUTPUT.PUT_LINE('OWNER NAME       : '||NAME);
  DBMS_OUTPUT.PUT_LINE('VEHICLE ID       : '||VID);
  DBMS_OUTPUT.PUT_LINE('VEHICLE TYPE       : '||VTYPE);
  DBMS_OUTPUT.PUT_LINE('VEHICLE INSURANCE END DATE       : '||EDATE);

EXCEPTION
WHEN TOO_MANY_ROWS
THEN
DBMS_OUTPUT.PUT_LINE('USE CURSOR ');

WHEN NO_DATA_FOUND
THEN
DBMS_OUTPUT.PUT_LINE('NO RELEVENT DATA FOUND');

END;    

EXECUTE VI_END_DATE(&END_YEAR);


---------
----- display details of those owners whose more than GIVEN vehicles were involved in an accident.


CREATE OR REPLACE PROCEDURE COUNT_DETAILS(CNT NUMBER)
IS
O_ID NUMBER;
NAME VARCHAR2(40); 
ADDS VARCHAR2(50);

LESS_CNT EXCEPTION;

BEGIN

IF CNT <= 0
 THEN
 RAISE LESS_CNT;
ELSE 
    SELECT O.OWNER_ID, O.NAME, O.ADDRESS  INTO O_ID, NAME, ADDS
    FROM OWNERS O JOIN VEHICLE V
    ON O.OWNER_ID = V.OWNER_ID
    JOIN ACCIDENTS A
    ON V.VEHICLE_ID = A.VEHICLE_ID
    GROUP BY O.OWNER_ID, O.NAME, O.ADDRESS
    HAVING COUNT(A.VEHICLE_ID) > CNT;

        DBMS_OUTPUT.PUT_LINE('OWNER ID       : '||O_ID);
        DBMS_OUTPUT.PUT_LINE('OWNER NAME       : '||NAME);
        DBMS_OUTPUT.PUT_LINE('ADDRESS         : '||ADDS);

END IF;

EXCEPTION
WHEN LESS_CNT
THEN
DBMS_OUTPUT.PUT_LINE('PLEASE ENTER VALID COUNT');
END COUNT_DETAILS;  
  
  
EXECUTE COUNT_DETAILS(&CNT);



----------------------------------------------------
--display details of those OWNER AND  vehicles whose owners died during an accident

---FUNCTION
-----------------------

CREATE OR REPLACE FUNCTION CNTOFDIE(STATS VARCHAR2)
RETURN VARCHAR2
IS
CNT NUMBER;
BEGIN
    SELECT COUNT(O.OWNER_ID) INTO CNT
    FROM OWNERS O JOIN VEHICLE V
    ON O.OWNER_ID = V.OWNER_ID
    JOIN ACCIDENTS A
    ON V.VEHICLE_ID = A.VEHICLE_ID
    JOIN VICTIMS VI
    ON A.ACCIDENT_ID = VI.ACCIDENT_ID
    WHERE UPPER(VI.STATUS) = STATS;
    
RETURN CNT;
END CNTOFDIE;


---PROCEDURE    

SET SERVEROUTPUT ON 
CREATE OR REPLACE PROCEDURE STATUS_OF_OWNER(STATS_UPPER VARCHAR)
IS
CURSOR D_STAUS IS
    SELECT O.OWNER_ID, O.NAME, O.ADDRESS, V.VEHICLE_ID, V.VEHICLE_TYPE
    FROM OWNERS O JOIN VEHICLE V
    ON O.OWNER_ID = V.OWNER_ID
    JOIN ACCIDENTS A
    ON V.VEHICLE_ID = A.VEHICLE_ID
    JOIN VICTIMS VI
    ON A.ACCIDENT_ID = VI.ACCIDENT_ID
    WHERE UPPER(VI.STATUS) = STATS_UPPER;

CNT NUMBER;    

BEGIN

CNT := CNTOFDIE(STATS);
FOR I IN D_STAUS 
LOOP
    DBMS_OUTPUT.PUT_LINE('OWNER_ID     : '||I.OWNER_ID);
    DBMS_OUTPUT.PUT_LINE('NAME     : '||I.NAME);
    DBMS_OUTPUT.PUT_LINE('ADDRESS     : '||I.ADDRESS);
    DBMS_OUTPUT.PUT_LINE('VEHICLE ID     : '||I.VEHICLE_ID);
    DBMS_OUTPUT.PUT_LINE('VEHICLE_TYPE     : '||I.VEHICLE_TYPE);
    
    DBMS_OUTPUT.PUT_LINE('                                    ');
    
    
END LOOP;
DBMS_OUTPUT.PUT_LINE('TOTAL COUNT OF '||STATS_UPPER|| ' IS '|| CNT);
END STATUS_OF_OWNER;

EXECUTE STATUS_OF_OWNER('&STATS_UPPER') ;

-------
--display details of those OWNER AND  vehicles whose owners died during an accident

---FUNCTION
-----------------------

CREATE OR REPLACE FUNCTION CNTOFDIE(STATS VARCHAR2)
RETURN VARCHAR2
IS
CNT NUMBER;
BEGIN
    SELECT COUNT(O.OWNER_ID) INTO CNT
    FROM OWNERS O JOIN VEHICLE V
    ON O.OWNER_ID = V.OWNER_ID
    JOIN ACCIDENTS A
    ON V.VEHICLE_ID = A.VEHICLE_ID
    JOIN VICTIMS VI
    ON A.ACCIDENT_ID = VI.ACCIDENT_ID
    WHERE UPPER(VI.STATUS) = STATS;
    
RETURN CNT;
END CNTOFDIE;


---PROCEDURE    

SET SERVEROUTPUT ON 
CREATE OR REPLACE PROCEDURE STATUS_OF_OWNER(STATS_UPPER VARCHAR)
IS
CURSOR D_STAUS IS
    SELECT O.OWNER_ID, O.NAME, O.ADDRESS, V.VEHICLE_ID, V.VEHICLE_TYPE
    FROM OWNERS O JOIN VEHICLE V
    ON O.OWNER_ID = V.OWNER_ID
    JOIN ACCIDENTS A
    ON V.VEHICLE_ID = A.VEHICLE_ID
    JOIN VICTIMS VI
    ON A.ACCIDENT_ID = VI.ACCIDENT_ID
    WHERE UPPER(VI.STATUS) = STATS_UPPER;

CNT NUMBER;    

BEGIN

CNT := CNTOFDIE(STATS);
FOR I IN D_STAUS 
LOOP
    DBMS_OUTPUT.PUT_LINE('OWNER_ID     : '||I.OWNER_ID);
    DBMS_OUTPUT.PUT_LINE('NAME     : '||I.NAME);
    DBMS_OUTPUT.PUT_LINE('ADDRESS     : '||I.ADDRESS);
    DBMS_OUTPUT.PUT_LINE('VEHICLE ID     : '||I.VEHICLE_ID);
    DBMS_OUTPUT.PUT_LINE('VEHICLE_TYPE     : '||I.VEHICLE_TYPE);
    
    DBMS_OUTPUT.PUT_LINE('                                    ');
    
    
END LOOP;
DBMS_OUTPUT.PUT_LINE('TOTAL COUNT OF '||STATS_UPPER|| ' IS '|| CNT);
END STATUS_OF_OWNER;

EXECUTE STATUS_OF_OWNER('&STATS_UPPER') ;

